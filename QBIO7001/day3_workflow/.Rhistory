dat <- read.csv("./data/marsupials.csv")
# import from xlxs file
library(readxl)
excel_sheets("./data/marsupials.xlsx")
dat2 <- read_excel("./data/marsupials.xlsx", sheet = "reduced")
str(dat2)
### Tidying data -----
str(dat)
#convert lifespan column into double and "_" into NAs
dat$Maximum.lifespan <- as.double(dat$Maximum.lifespan)
#simplify the column names
names(dat)<-c("Family", "Genus", "Species", "FemaleMass", "PopDensity", "MaxLifeSpan")
str(dat)
# What is the marsupial with the greatest maximum life-span?
dat[dat$MaxLifeSpan,]
# Does the dataset also contain genera from the Americas, such as Glironia, Didelphis and Marmosa?
c("Glironia", "Didelphis", "Marmosa") %in% dat$Genus
barplot(datMacropus$FemaleMass, names.arg = datMacropus$Species,
xlab = "Female body mass [g]", horiz = TRUE, las = 1)
### Visual data exploration ------
datMacropus <- dat[dat$Genus == "Macropus",]
barplot(datMacropus$FemaleMass, names.arg = datMacropus$Species,
xlab = "Female body mass [g]", horiz = TRUE, las = 1)
barplot(datMacropus$FemaleMass, names.arg = datMacropus$Species,
xlab = "Female body mass [g]", horiz = TRUE)
, las = 1
barplot(datMacropus$FemaleMass, names.arg = datMacropus$Species,
xlab = "Female body mass [g]", horiz = TRUE, las = 1)
?las
??las
?barplot
table(dat$Family)
# What is the mean of population for each family?
aggregate(dat$PopDensity, by = list(dat$Family), FUN = mean)
aggregate(PopDensity ~ Family, data = dat, FUN = "mean")
aggregate(dat[,c('FemaleMass', 'PopDensity', 'MaxLifeSpan')], by = list(dat$Family, dat$Genus), FUN = median)
aggregate(dat[c('FemaleMass', 'PopDensity', 'MaxLifeSpan')], by = list(dat$Family, dat$Genus), FUN = median)
testResult$p.value
### t-test
testResult <- t.test(dat$PopDensity[dat$Family == "Macropodidae"],
dat$PopDensity[dat$Family == "Dasyuridae"])
testResult
str(testResult)
testResult$p.value
dat$LogFemaleMass <- log(dat$FemaleMass)
dat$LogMaxLifeSpan <- log(dat$MaxLifeSpan)
lmFit <- lm(LogMaxLifeSpan ~ LogFemaleMass, data = dat)
lmFit
str(lmFit)
summary(lmFit)
lmFit$coefficients
lmFit$coefficients["logFemaleMass"]
lmFit$coefficients["LogFemaleMass"]
x <- c(3,7,2,1)
save(x, file = "./results/A_little_vector.RData")
y <- 1:17
save(x, y, file = "./results/Two_little_vectors.RData")
load(file = "./results/Two_little_vectors.RData")
write.csv(dat, file = "./results/extended_data.csv")
chla <- read.csv("./data/fig/figS3/chla.csv")
View(chla)
data(ivesDataLP)
data(ivesDataByWeek)
data(lakeWAplankton)
install.packages("remotes")
remotes::install_github("PlanktonTeam/planktonr")
biomass <- read.csv("./data/fig/figS3/biomass.csv")
attenuation <- read.csv("./data/fig/figS3/attenuation.csv")
sestonC <- read.csv("./data/fig/figS3/sestonC.csv")
View(attenuation)
View(sestonC)
dat <- list(chla, biomass, attenuation, sestonC)
str(dat)
View(chla)
dat <- list(chla = chla,
biomass = biomass,
attenuation = attenuation,
sestonC = sestonC)
str(dat)
hist(dat$FemaleMassT, breaks = seq(from=min(dat$FemaleMass), to=max(dat$FemaleMass), by=10))
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass), to=max(dat$FemaleMass), by=10))
hist(dat$FemaleMass, breaks = seq(from= int(min(dat$FemaleMass)), to=max(dat$FemaleMass), by=10))
min(dat$FemaleMass)
dat$FemaleMass
datPhyto <- list(chla = chla,
biomass = biomass,
attenuation = attenuation,
sestonC = sestonC)
# import from csv file
dat <- read.csv("./data/marsupials.csv")
# import from xlxs file
library(readxl)
excel_sheets("./data/marsupials.xlsx")
dat2 <- read_excel("./data/marsupials.xlsx", sheet = "reduced")
str(dat2)
### Tidying data -----
str(dat)
#convert lifespan column into double and "_" into NAs
dat$Maximum.lifespan <- as.double(dat$Maximum.lifespan)
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass), to=max(dat$FemaleMass), by=10))
dat$FemaleMass
View(dat)
### Tidying data -----
str(dat)
#convert lifespan column into double and "_" into NAs
dat$Maximum.lifespan <- as.double(dat$Maximum.lifespan)
#simplify the column names
names(dat)<-c("Family", "Genus", "Species", "FemaleMass", "PopDensity", "MaxLifeSpan")
str(dat)
# What is the marsupial with the greatest maximum life-span?
dat[which.max(dat$MaxLifeSpan),]
# Does the dataset also contain genera from the Americas, such as Glironia, Didelphis and Marmosa?
c("Glironia", "Didelphis", "Marmosa") %in% dat$Genus
### Visual data exploration ------
datMacropus <- dat[dat$Genus == "Macropus",]
barplot(datMacropus$FemaleMass, names.arg = datMacropus$Species,
xlab = "Female body mass [g]", horiz = TRUE, las = 1)
table(dat$Family)
# What is the mean of population for each family?
aggregate(dat$PopDensity, by = list(dat$Family), FUN = mean)
aggregate(PopDensity ~ Family, data = dat, FUN = "mean")
aggregate(dat[c('FemaleMass', 'PopDensity', 'MaxLifeSpan')], by = list(dat$Family, dat$Genus), FUN = median)
aggregate(cbind(FemaleMass, PopDensity, MaxLifeSpan) ~ Family + Genus,
data = dat,
FUN = median)
### t-test
testResult <- t.test(dat$PopDensity[dat$Family == "Macropodidae"],
dat$PopDensity[dat$Family == "Dasyuridae"])
testResult
str(testResult)
testResult$p.value
dat$LogFemaleMass <- log(dat$FemaleMass)
dat$LogMaxLifeSpan <- log(dat$MaxLifeSpan)
lmFit <- lm(LogMaxLifeSpan ~ LogFemaleMass, data = dat)
lmFit
str(lmFit)
summary(lmFit)
lmFit$coefficients["LogFemaleMass"]
plot(x = dat$LogFemaleMass, y = dat$LogMaxLifeSpan,
xlab = "log(Female body mass [g])", ylab = "log(Maximum life-span [years])",
pch = 16, col = rgb(0, 0, 0.8, 0.2))
abline(lmFit, col = "red")
chla <- read.csv("./data/fig/figS3/chla.csv")
biomass <- read.csv("./data/fig/figS3/biomass.csv")
attenuation <- read.csv("./data/fig/figS3/attenuation.csv")
sestonC <- read.csv("./data/fig/figS3/sestonC.csv")
datPhyto <- list(chla = chla,
biomass = biomass,
attenuation = attenuation,
sestonC = sestonC)
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass), to=max(dat$FemaleMass), by=10))
hist(dat$FemaleMass)
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass), to=max(dat$FemaleMass), by=1500))
dat$FemaleMass
max(dat$FemaleMass)
min(dat$FemaleMass)
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass), to=max(dat$FemaleMass), by=1500))
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass), to=max(dat$FemaleMass)+1000, by=1500))
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass), to=30000, by=1500))
hist(reefFishFST$FST, breaks = seq(from=min(reefFishFST$FST)-0.1, to=max(reefFishFST$FST)+0.1, by=0.1),
main = "Histogram of Reef Fish FST", xlab = "FST")
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass)-1000, to=max(dat$FemaleMass)+1000, by=1500))
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass)-1500, to=max(dat$FemaleMass)+1500, by=1500))
lines(dat$FemaleMass, mean(dat$FemaleMass))
abline(v = mean(dat$FemaleMass))
abline(v = mean(dat$FemaleMass), , col="red")
abline(v = mean(dat$FemaleMass),col="red")
hist(dat$FemaleMass, breaks = seq(from=min(dat$FemaleMass)-1500, to=max(dat$FemaleMass)+1500, by=1500),
main = "Histogram of Reef Fish FST", xlab = "FST")
#3.4
par(mar=c(0,0,0,0))
plot(0, xlim=c(-3, 3), ylim=c(-3, 3), type='n', axes=FALSE, ann=FALSE)
?par
x<-rnorm(n,0,1)
n<-1000
x<-rnorm(n,0,1)
?seq
x<-rnorm(n,0,1)
x<-rnorm(n,0,1)
y<-rnorm(n,0,1)
size<-seq(10, 0.1, length.out = n)
?hsv
colours<-hsv(h = seq(0,1, length.out=n), s= 1, v=1)
colours
?points
points(x,y, cex = size, col = colours)
seq(0, 1, length.out=n)
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'n', axes = FALSE, ann = FALSE)
points(x, y, col = cols, pch = 16, cex = size)
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'n', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 16, cex = size)
?plot
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'n', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 12, cex = size)
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'o', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 12, cex = size)
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'p', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 12, cex = size)
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'p', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 16, cex = size)
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'p', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 14, cex = size)
?points
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'p', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 11, cex = size)
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'p', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 8, cex = size)
seq(0, 1, length.out=n)
points(x, y, cex = size, col = colours)
points(x, y, col = colours, pch = 8, cex = size)
plot(0, xlim = c(-3, 3), ylim = c(-3, 3),
type = 'p', axes = FALSE, ann = FALSE)
points(x, y, col = colours, pch = 8, cex = size)
