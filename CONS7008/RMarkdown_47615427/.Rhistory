qqline(resid(NatParkData_lm))
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
## log-transform and fit a linear model
NatParkData_lm<-lm(log(frog_spp_richness) ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
## do we meet the assumptions of linear modelling?
qqnorm(resid(NatParkData_lm))
qqline(resid(NatParkData_lm))
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
## log-transform and fit a linear model
NatParkData_lm<-lm(frog_spp_richness ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
## do we meet the assumptions of linear modelling?
qqnorm(resid(NatParkData_lm))
qqline(resid(NatParkData_lm))
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
## log-transform and fit a linear model
NatParkData_lm<-lm(log(frog_spp_richness) ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
## do we meet the assumptions of linear modelling?
qqnorm(resid(NatParkData_lm))
qqline(resid(NatParkData_lm))
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
cor(NatParkData$frog_spp_richness, NatParkData$visit_rate_1000_per_yr)
cor(NatParkData$frog_spp_richness, NatParkData$NP_area_1000_ha)
## log-transform and fit a linear model
NatParkData_lm<-lm(log(frog_spp_richness) ~ VPD + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
## do we meet the assumptions of linear modelling?
qqnorm(resid(NatParkData_lm))
qqline(resid(NatParkData_lm))
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
#Chytrid_Amphibian_Data
ChytridAmpData$NP<-factor(ChytridAmpData$NP)
## log-transform and fit a linear model
NatParkData_lm<-lm(log(frog_spp_richness) ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
## log-transform and fit a linear model
NatParkData_lm<-lm(log(frog_spp_richness) ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
## do we meet the assumptions of linear modelling?
qqnorm(resid(NatParkData_lm))
qqline(resid(NatParkData_lm))
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
cor(NatParkData$frog_spp_richness, NatParkData$visit_rate_1000_per_yr)
NatParkData$log_frog_spp_richness<-log(NatParkData$frog_spp_richness)
gplot(NatParkData, aes(x=log_frog_spp_richness)) +
geom_histogram(color="black", fill="white", bins=5)+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
ggplot(NatParkData, aes(x=log_frog_spp_richness)) +
geom_histogram(color="black", fill="white", bins=5)+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
ggplot(NatParkData, aes(x=log_frog_spp_richness)) +
geom_histogram(color="black", fill="white", bins=8)+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
ggplot(NatParkData, aes(x=log_frog_spp_richness)) +
geom_histogram(color="black", fill="white", bins=3)+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
ggplot(NatParkData, aes(x=log_frog_spp_richness)) +
geom_histogram(color="black", fill="white", bins=4)+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
ggplot(NatParkData, aes(x=log_frog_spp_richness)) +
geom_histogram(color="black", fill="white")+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
ggplot(NatParkData, aes(x=log_frog_spp_richness)) +
geom_histogram(color="black", fill="white",bins=5)+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
## log-transform and fit a linear model
NatParkData_lm<-lm(log(frog_spp_richness) ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
## log-transform and fit a linear model
NatParkData_lm<-lm(frog_spp_richness ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
## do we meet the assumptions of linear modelling?
qqnorm(resid(NatParkData_lm))
qqline(resid(NatParkData_lm))
## or check diagnostics using the simulateResiduals() function from the DHARMa package
plot(simulateResiduals(NatParkData_lm))
library(reshape2)
meltedNatParkData <- melt(NatParkData)
meltedNatParkData <- melt(NatParkData)
meltedNatParkData <- NatParkData %>%
select(!NP) %>%
melt()
meltedNatParkData <- NatParkData %>%
select(!NP) %>%
melt()
meltedNatParkData <- NatParkData %>%
melt(id.vars = "NP")
ggplot(data = meltedNatParkData, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
meltedNatParkData
meltedNatParkData <- NatParkData %>%
melt(id.vars = "NP")
ggplot(data = meltedNatParkData, aes(x=NP, y=variable, fill=value)) +
geom_tile()
cormat <- round(cor(NatParkData),2)
cormat <- round(cor(NatParkData),2)
head(NatParkData)
cormat <- NatParkData %>% select(!NP)
meltedCormat <- melt(cormat)
cormat
cormat <- NatParkData %>% select(!NP) %>% cor()
cormat
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=NP, y=variable, fill=value)) +
geom_tile()
meltedCormat
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5),
axis.title = element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(ggplot2)
library(patchwork)
suppressPackageStartupMessages(library(gridExtra))
library(DHARMa) # flexible model diagnostics
library(emmeans)
library(lme4) # for mixed-effects models
library(lmerTest)
NatParkData<-read_csv("CHYTRID_DATA_2023/National_Park_Data.csv")
ChytridAmpData<-read_csv("CHYTRID_DATA_2023/Chytrid_Amphibian_Data.csv")
table1<-data.frame("Variables" = c("NP", "VPD", "NP_area_1000_ha", "visit_rate_1000_per_yr", "frog_spp_richness", "plant_spp_richness"),
"Description" = c("Code for each of the 15 National Parks (NPs) sampled", "Mean annual Vapour Pressure Deficit (VPD; how dry the atmosphere is; higher is drier) for each NP", "The area of the NP (in thousands of hectares)", "Average number of visitors per year in thousands", "Number of amphibian species recorded in each NP during surveys conducted between 2010 and 2020","Number of plant species recorded in each NP during suverys conducted between 2010 and 2020"),
"Type" = c("Nominal","Numeric","Numeric","Numeric","Numeric","Numeric"))
knitr::kable(table1, caption = "Table 1. National Park Data")
table1<-data.frame("Variables" = c("NP", "creek_id", "track_density", "pop_density", "species", "n_frogs_sampled", "n_infected"),
"Description" = c("Code for each of the 15 National Parks (NPs) sampled", "The ID number for each creek sampled for frogs and toads in each NP", "The density of walking tracks within a 500m radius of each creek sampling site", "The estimated density of the frog/toad population in each sampled creek", "The species of frog or toad. These are Taudactylus acutirostris, Rhinella marina and Taudactylus rheophilus", "The number of frogs of each species sampled in each creek","The number of sampled frogs/toads that had visible signs of Chytrid infection"),
"Type" = c("Nominal","Nominal","Numeric","Numeric","Nominal","Numeric","Numeric"))
knitr::kable(table1, caption = "Table 2. Chytrid Amphibian Data")
NatParkData$NP<-factor(NatParkData$NP)
summary(NatParkData)
ChytridAmpData$NP<-factor(ChytridAmpData$NP)
ChytridAmpData$creek_id<-factor(ChytridAmpData$creek_id)
ChytridAmpData$species<-factor(ChytridAmpData$species, levels=c("Taudactylus acutirostris","Taudactylus rheophilus","Rhinella marina"))
summary(ChytridAmpData)
ChytridAmpData$normal_frogs_prop<-(ChytridAmpData$n_frogs_sampled - ChytridAmpData$n_infected)/ChytridAmpData$n_frogs_sampled
p1<-ggplot(ChytridAmpData, aes(x=n_frogs_sampled)) +
geom_histogram(color="black", fill="white", bins=10) +
ggtitle("(a)") +
theme(plot.title = element_text(hjust = 0.5, size = 8))
p2<-ggplot(ChytridAmpData, aes(x=n_infected)) +
geom_histogram(color="black", fill="white", bins=10)+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
p3<-ggplot(ChytridAmpData, aes(x=normal_frogs_prop)) +
geom_histogram(color="black", fill="white", bins=10)+
ggtitle("(c)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
grid.arrange(p1,p2,p3,ncol = 3, nrow = 1)
p4<-ggplot(ChytridAmpData, aes(x=species, y=n_frogs_sampled, fill=species)) +
geom_boxplot()+
scale_fill_manual(values=c("#7C8483","#60B2E5","#53F4FF"))+
ylab("Number of frogs in each creek")+
xlab("(a)")+
theme(axis.text.x=element_blank())
p5<-ggplot(ChytridAmpData, aes(x=species, y=n_infected, fill=species)) +
geom_boxplot()+
scale_fill_manual(values=c("#7C8483","#60B2E5","#53F4FF"))+
ylab("Number of infected sampled frogs/toads")+
xlab("(b)")+
theme(axis.text.x=element_blank())
combined <- p4 + p5 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggplot(ChytridAmpData, aes(x=pop_density, y=normal_frogs_prop, color=species)) +
geom_point(size=2) +
scale_color_manual(values=c("#7C8483","#60B2E5","#53F4FF"))+
theme_minimal() +
theme(legend.background = element_rect(linetype="solid",
colour ="#423E3B"))
ChytridAmpData$n_no_infected<-ChytridAmpData$n_frogs_sampled - ChytridAmpData$n_infected
ChytridAmp_glm_1 <- glm(cbind(n_infected, n_no_infected) ~ track_density + pop_density + species + NP, family="binomial", data = ChytridAmpData)
testDispersion(simulateResiduals(ChytridAmp_glm_1))
ChytridAmpData$ID = c(1:dim(ChytridAmpData)[1])
ChytridAmp_glm_2 <- suppressWarnings(glmer(cbind(n_infected, n_no_infected) ~ track_density + pop_density + species + NP + (1|ID), family="binomial", data = ChytridAmpData))
testDispersion(simulateResiduals(ChytridAmp_glm_2))
summary(ChytridAmp_glm_2)
ChytridAmp_glm_3 <- glmer(cbind(n_infected, n_no_infected) ~ track_density + pop_density + species + (1|ID) + (1|NP), family="binomial", data = ChytridAmpData)
testDispersion(simulateResiduals(ChytridAmp_glm_3))
summary(ChytridAmp_glm_3)
ChytridAmp_glm_4 <- glmer(cbind(n_infected, n_no_infected) ~ track_density + species + (1|ID) + (1|NP), family="binomial", data = ChytridAmpData)
testDispersion(simulateResiduals(ChytridAmp_glm_4))
summary(ChytridAmp_glm_4)
emmeans(object = ChytridAmp_glm_4, specs = pairwise~species)
plot(emmeans(ChytridAmp_glm_4, ~species, type = "response"), horizontal=F)
0.6106/(0.6106 + 0.7082)
NatParkData_lm<-lm(frog_spp_richness ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5),
axis.title = element_blank())
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7),
axis.title = element_blank())
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6),
axis.title = element_blank())
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 65, vjust = 0.6),
axis.title = element_blank())
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 35, vjust = 0.6),
axis.title = element_blank())
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6),
axis.title = element_blank())
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 25, vjust = 0.6),
axis.title = element_blank())
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 25, vjust = 0.6),
axis.title = element_blank())+
scale_fill_distiller(palette = 'Spectral')
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor()
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 25, vjust = 0.6),
axis.title = element_blank()) +
geom_text(aes(label = value), color = "white", size = 4)
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% cor() %>% round(,2)
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 25, vjust = 0.6),
axis.title = element_blank()) +
geom_text(aes(label = value), color = "white", size = 4)
library(reshape2)
cormat <- NatParkData %>% select(!NP) %>% round(cor(),2)
cormat <- NatParkData %>% select(!NP) %>% round(cor(NatParkData),2)
cormat <- NatParkData %>% select(!NP) %>% cor() %>% round(x,2)
library(reshape2)
NatParkData <- NatParkData %>% select(!NP)
cormat <- round(cor(NatParkData))
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 25, vjust = 0.6),
axis.title = element_blank()) +
geom_text(aes(label = value), color = "white", size = 4)
library(reshape2)
NatParkData <- NatParkData %>% select(!NP)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(ggplot2)
library(patchwork)
suppressPackageStartupMessages(library(gridExtra))
library(DHARMa) # flexible model diagnostics
library(emmeans)
library(lme4) # for mixed-effects models
library(lmerTest)
NatParkData<-read_csv("CHYTRID_DATA_2023/National_Park_Data.csv")
ChytridAmpData<-read_csv("CHYTRID_DATA_2023/Chytrid_Amphibian_Data.csv")
table1<-data.frame("Variables" = c("NP", "VPD", "NP_area_1000_ha", "visit_rate_1000_per_yr", "frog_spp_richness", "plant_spp_richness"),
"Description" = c("Code for each of the 15 National Parks (NPs) sampled", "Mean annual Vapour Pressure Deficit (VPD; how dry the atmosphere is; higher is drier) for each NP", "The area of the NP (in thousands of hectares)", "Average number of visitors per year in thousands", "Number of amphibian species recorded in each NP during surveys conducted between 2010 and 2020","Number of plant species recorded in each NP during suverys conducted between 2010 and 2020"),
"Type" = c("Nominal","Numeric","Numeric","Numeric","Numeric","Numeric"))
knitr::kable(table1, caption = "Table 1. National Park Data")
table1<-data.frame("Variables" = c("NP", "creek_id", "track_density", "pop_density", "species", "n_frogs_sampled", "n_infected"),
"Description" = c("Code for each of the 15 National Parks (NPs) sampled", "The ID number for each creek sampled for frogs and toads in each NP", "The density of walking tracks within a 500m radius of each creek sampling site", "The estimated density of the frog/toad population in each sampled creek", "The species of frog or toad. These are Taudactylus acutirostris, Rhinella marina and Taudactylus rheophilus", "The number of frogs of each species sampled in each creek","The number of sampled frogs/toads that had visible signs of Chytrid infection"),
"Type" = c("Nominal","Nominal","Numeric","Numeric","Nominal","Numeric","Numeric"))
knitr::kable(table1, caption = "Table 2. Chytrid Amphibian Data")
NatParkData$NP<-factor(NatParkData$NP)
summary(NatParkData)
ChytridAmpData$NP<-factor(ChytridAmpData$NP)
ChytridAmpData$creek_id<-factor(ChytridAmpData$creek_id)
ChytridAmpData$species<-factor(ChytridAmpData$species, levels=c("Taudactylus acutirostris","Taudactylus rheophilus","Rhinella marina"))
summary(ChytridAmpData)
ChytridAmpData$normal_frogs_prop<-(ChytridAmpData$n_frogs_sampled - ChytridAmpData$n_infected)/ChytridAmpData$n_frogs_sampled
p1<-ggplot(ChytridAmpData, aes(x=n_frogs_sampled)) +
geom_histogram(color="black", fill="white", bins=10) +
ggtitle("(a)") +
theme(plot.title = element_text(hjust = 0.5, size = 8))
p2<-ggplot(ChytridAmpData, aes(x=n_infected)) +
geom_histogram(color="black", fill="white", bins=10)+
ggtitle("(b)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
p3<-ggplot(ChytridAmpData, aes(x=normal_frogs_prop)) +
geom_histogram(color="black", fill="white", bins=10)+
ggtitle("(c)")+
theme(plot.title = element_text(hjust = 0.5, size = 8))
grid.arrange(p1,p2,p3,ncol = 3, nrow = 1)
p4<-ggplot(ChytridAmpData, aes(x=species, y=n_frogs_sampled, fill=species)) +
geom_boxplot()+
scale_fill_manual(values=c("#7C8483","#60B2E5","#53F4FF"))+
ylab("Number of frogs in each creek")+
xlab("(a)")+
theme(axis.text.x=element_blank())
p5<-ggplot(ChytridAmpData, aes(x=species, y=n_infected, fill=species)) +
geom_boxplot()+
scale_fill_manual(values=c("#7C8483","#60B2E5","#53F4FF"))+
ylab("Number of infected sampled frogs/toads")+
xlab("(b)")+
theme(axis.text.x=element_blank())
combined <- p4 + p5 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggplot(ChytridAmpData, aes(x=pop_density, y=normal_frogs_prop, color=species)) +
geom_point(size=2) +
scale_color_manual(values=c("#7C8483","#60B2E5","#53F4FF"))+
theme_minimal() +
theme(legend.background = element_rect(linetype="solid",
colour ="#423E3B"))
ChytridAmpData$n_no_infected<-ChytridAmpData$n_frogs_sampled - ChytridAmpData$n_infected
ChytridAmp_glm_1 <- glm(cbind(n_infected, n_no_infected) ~ track_density + pop_density + species + NP, family="binomial", data = ChytridAmpData)
testDispersion(simulateResiduals(ChytridAmp_glm_1))
ChytridAmpData$ID = c(1:dim(ChytridAmpData)[1])
ChytridAmp_glm_2 <- suppressWarnings(glmer(cbind(n_infected, n_no_infected) ~ track_density + pop_density + species + NP + (1|ID), family="binomial", data = ChytridAmpData))
testDispersion(simulateResiduals(ChytridAmp_glm_2))
summary(ChytridAmp_glm_2)
ChytridAmp_glm_3 <- glmer(cbind(n_infected, n_no_infected) ~ track_density + pop_density + species + (1|ID) + (1|NP), family="binomial", data = ChytridAmpData)
testDispersion(simulateResiduals(ChytridAmp_glm_3))
summary(ChytridAmp_glm_3)
ChytridAmp_glm_4 <- glmer(cbind(n_infected, n_no_infected) ~ track_density + species + (1|ID) + (1|NP), family="binomial", data = ChytridAmpData)
testDispersion(simulateResiduals(ChytridAmp_glm_4))
summary(ChytridAmp_glm_4)
emmeans(object = ChytridAmp_glm_4, specs = pairwise~species)
plot(emmeans(ChytridAmp_glm_4, ~species, type = "response"), horizontal=F)
0.6106/(0.6106 + 0.7082)
NatParkData_lm<-lm(frog_spp_richness ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
library(reshape2)
NatParkData <- NatParkData %>% select(!NP)
cormat <- round(cor(NatParkData),2)
meltedCormat <- melt(cormat)
ggplot(data = meltedCormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 25, vjust = 0.6),
axis.title = element_blank()) +
geom_text(aes(label = value), color = "white", size = 4)
##Import data
NatParkData<-read_csv("CHYTRID_DATA_2023/National_Park_Data.csv")
summary(NatParkData)
setwd("~/Desktop/Courses/CONS7008/RMarkdown")
##Import data
NatParkData<-read_csv("CHYTRID_DATA_2023/National_Park_Data.csv")
summary(NatParkData)
ggplot(ChytridAmpData, aes(x=pop_density, y=normal_frogs_prop, color=species)) +
geom_point(size=2) +
scale_color_manual(values=c("#8ACB88","#FFBF46","#575761"))+
theme_minimal() +
theme(legend.background = element_rect(linetype="solid",
colour ="#423E3B"))
ggplot(ChytridAmpData, aes(x=NP, y=normal_frogs_prop, fill=NP)) +
geom_boxplot()+
xlab("National Parks (NPs)")+
ylab("normal_frogs_prop")
ggplot(ChytridAmpData, aes(x=NP, y=normal_frogs_prop, fill=NP)) +
geom_boxplot()+
scale_fill_manual(values=c("#7C8483","#60B2E5","#53F4FF"))+
xlab("Species")+
ylab("Propotion of healthy frogs in each National Park")
ggplot(ChytridAmpData, aes(x=NP, y=normal_frogs_prop, fill=NP)) +
geom_boxplot()+
xlab("")+
ylab("Propotion of healthy frogs in each National Park")
ggplot(ChytridAmpData, aes(x=NP, y=normal_frogs_prop, fill=NP)) +
geom_boxplot()+
xlab("")+
ylab("Propotion of healthy frogs in each National Park")
NatParkData_lm<-lm(log(frog_spp_richness) ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
par(mfrow = c(2, 1))                   ## Sets up space for two plots (2 rows, 1 column)
hist(NatParkData$frog_spp_richness, breaks=5)
hist(log(NatParkData$frog_spp_richness), breaks=5)
NatParkData_lm<-lm(log(frog_spp_richness) ~ VPD + NP_area_1000_ha + visit_rate_1000_per_yr + plant_spp_richness, data = NatParkData)
plot(simulateResiduals(NatParkData_lm))
summary(NatParkData_lm)
install.packages("devtools")
devtools::install_github("JanEngelstaedter/boilrdata")
drosophilaWingG
library(boilrdata)
drosophilaWingG
vars <-diag(drosophilaWingG)
Gvarsonly <- diag(drosophilaWingG)
Gvarsonly
Gvarsonly <- diag(vars)
Gvarsonly
GvarsOnly <- diag(vars)
GcorsOnly <- drosophilaWingG - GvarsOnly
GcorsOnly
genera
genera <- unique(marsupials$Genus)[1:7]
?substr
names(genera) <- paste0("Genus", LETTERS[1:7])
genera
str(reefFishPhylogeny)
reefFishPhylogeny["tip.label"][1:5]
rep(5, 10)
rep(c(5,10), 10)
rep(c(5,10), each = 10)
rep(5:7, 3:1)
runif(10)
runif(10, min = 0, max = 100)
sample(c(1,4,7,8,10),3)
sample(c(1,4,7,8,10),10)
sample(c(1,4,7,8,10),10, repplace = TRUE)
sample(c(1,4,7,8,10),10, re place = TRUE)
sample(c(1,4,7,8,10),10, replace = TRUE)
x <- 1:5
x <- 1:5
y <- 6:10
x + y
x + 7
x*y
1:10 * 2
2^(1:10)
1:10 + c(0,1)
1:10 + 1:3
1:10 + 1:2
--------------------
2^1:10
2^(1:10)
2^1:10
--------------------
log(10, base = c(2,3,10))
y<-1:10
log(y, base = c(2,10))
sum(y)
mean(y)
var(y)
median(y)
x<-1:3
y<-4:6
x*y
sum(x*y)
x<-4L
x
amphibians <- c("frog", "toad", "salamander")
nchar(amphibians)
colours <- c("yellow", "green", "black")
paste(colours, amphibians)
paste("Hello", "How are you?", sep = ',')
paste("Hello", "How are you?", sep = ', ')
paste(amphibians, colours, sep = ": ")
paste(colours, amphibians, collapse = ", ")
paste0(("Hello", "How are you?")
paste0("Hello", "How are you?")
x<-1:100
x == 5
b1 | b2
b1 <- TRUE
b2 <- FALSE
b1 | b2
b1 & b2
!b1
!b2
b1 & (!b2)
any(1:100 <0)
all(1:100>5)
all(1:100 > -5)
x <- 1:3
y <- rep(2, 6)
x + y
seq(10, 20, by = 5) < 17
